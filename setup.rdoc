1: VIM
edit ~/.vimrc
set tabstop=2       # use two space for tab not default 8 spaces
set shiftwidth=2    # apply tab on multiple selected lines
set expandtab       # insert spaces for tabs


2: Env Variable
export do="--dry-run=client -o=yaml"

3: Alias
alias k=kubectl
alias kn='kubectl config set-context --current --namespace '

4: https://stackoverflow.com/a/59752672/3098330
Context doesn't create new users/clusters. A context simply sets a new mapping that makes switching easier between multiple clusters.
k config use-context minikube


Debugging

* Debugging Pods.
* Debugging Replication Controller.
* Debugging Services

* Debugging Pods
    * Check the current state of the Pod and recent events with the following command:
        * k describe po <pod-name>
    * Pod is in pending state
    * Pod is in waiting state
    * Pod is crash loop backing or in an unhealthy state
    * Pod is scheduled but Not running as expected

* Debugging Replication Controller
    * operation will be sanme as pod

* Debugging Services
    * Verify there are endpoints for services. You can do this by:
        * kubectl get endpoints ${SERVICE_NAME}
    * kubectl get pods --selector=app=frontend

#####################
#####################

Question 3
Create a Pod with the name liveness-test in the default namespace and configure Liveness Probe like the following:-

You can use any container image to create the Pod
Liveness Probe must be configured to use the following custom command cat /tmp/healthy
The health-check should start after 20 secs of the container start
The health-check should be getting checked in every 15 secs

https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/


############################################
Pod mai ENV add karna (When Image is already there)

Sequence

Pod
    Container
        ENV
        volumeMounts
    Volumes
############################################
############################################
